# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

# Map static resources from the /public folder to the /assets URL path
### NoDocs ###
GET     /assets/*file               controllers.Assets.versioned(file)

### NoDocs ###
GET   /docs/swagger-ui/*file        controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

# Blog post with MongoDb

###
#  summary: Get all the blogs from the MongoDb collections(limit of 10)
#  description: >
#   Response from MongoDb is limited to size 10 at the moment.
#  tags:
#    - Blog
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/models.Blog'
#    404:
#      description: empty resposne from database
#    500:
#      description: internal server error (connection issues)
###
GET     /blog                       controllers.BlogController.getAllBlogs

###
#  summary: Get the selected blog from the database
#  description: >
#   Have to send the valid blog id to select the right one
#  tags:
#    - Blog
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/models.Blog'
#    400:
#      description: Bad request (have to be in validated blog id)
#    404:
#      description: empty response from database
#    500:
#      description: internal server error (connection issues)
###
GET     /blog/:id                   controllers.BlogController.getSelectedBlog(id: String)

###
#  summary: Post a new blog post to the MongoDb database under "blogs" collection
#  description: >
#   Will be store under the collection names "blogs"
#  tags:
#    - Blog
#  parameters:
#    - name: body
#      in: body
#      required: true
#      description: New blog post form
#      schema:
#        $ref: '#/definitions/forms.BlogPostForm'
#  responses:
#    200:
#      description: success with response code
#    400:
#      description: Bad request (have to be in validated form request)
#    500:
#      description: internal server error (connection issues)
###
POST    /blog                       controllers.BlogController.createNewBlog

###
#  summary: Delete the selected blog from the database
#  description: >
#   Have to send the valid blog id to delete the right one
#  tags:
#    - Blog
#  responses:
#    200:
#      description: success
#    400:
#      description: Bad request (have to be in validated blog id)
#    404:
#      description: empty response from database
#    500:
#      description: internal server error (connection issues)
###
DELETE  /blog/:id                   controllers.BlogController.deleteBlog(id: String)